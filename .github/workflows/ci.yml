name: Continuous Integration

on:
  push:
    branches: [master, develop]
  pull_request:
    branches: [master, develop]

env:
  CARGO_TERM_COLOR: always

jobs:
  style:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt
      - name: cargo fmt --check
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: thumbv7em-none-eabihf
          override: true
          components: clippy
      - name: cargo clippy
        uses: actions-rs/cargo@v1
        continue-on-error: true
        with:
          command: clippy

  compile:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        toolchain:
          - stable
          - beta
        i2c: [default, bitbang]
        include:
          - i2c: default
            i2c-args: ''
          - i2c: bitbang
            i2c-args: i2c_bitbang
    steps:
      - uses: actions/checkout@v2

      - name: Install Rust ${{ matrix.toolchain }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          target: thumbv7em-none-eabihf
          override: true
          components: llvm-tools-preview

      - name: Install Binutils
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: cargo-binutils

      - name: Style Check
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --verbose

      - name: Build [Debug]
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --features "${{ matrix.i2c-args }}"

      - name: Build [Release]
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --features "${{ matrix.i2c-args }}"

      - name: Generate Release
        uses: actions-rs/cargo@v1
        with:
          command: objcopy
          args: --release --features "${{ matrix.i2c-args }}" --verbose -- -O binary booster-release.bin

      - name: Upload Release
        uses: actions/upload-artifact@v2
        if: ${{ matrix.toolchain == 'stable' }} &&
            (${{ github.ref == 'refs/heads/master' }} ||
             ${{ github.ref == 'refs/heads/develop' }})
        with:
          name: Firmware Images (${{ matrix.i2c }} I2C driver)
          path: |
            target/*/release/booster
            booster-release.bin

  compile-unstable:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        i2c: [default, bitbang]
        include:
          - i2c: default
            i2c-args: ''
          - i2c: bitbang
            i2c-args: i2c_bitbang
    steps:
      - uses: actions/checkout@v2
      - name: Install Rust Nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          target: thumbv7em-none-eabihf
          override: true
      - name: cargo build+unstable
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --features "unstable ${{ matrix.i2c-args }}"
      - name: cargo build+release+unstable
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --features "unstable ${{ matrix.i2c-args }}"
